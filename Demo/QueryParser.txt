QueryParser queryParser = new QueryParser("desc", analyzer);

queryParser.setAllowLeadingWildcard(true);//设置允许通配符？和*就可以使用
queryParser.setDefaultOperator(Operator.AND);默认or

Query query = queryParser.parse(str);

这里的str有很多，

1.“我是中国人”，就是从desc中查找有“我是中国人”的返回。跟termQuery差不多。

2.“id:[1 TO 3]”,查找id从1到3 的返回，中括号包含两边，大括号不包含。跟范围查找差不多

3.“city:北京”，查找city为北京的返回，不从默认字段desc中查

4.“hello~0.1”,模糊查询，~后面是0到1之间，靠近0就是跟hello很不一样，靠近1就是差不多一样

5.“\"hello  world\"~3”，片段查询，查hello跟world之间有3个词的。

6“+city:北京  -id:1”  ，查询city为北京，但是id不为1的。

7“city:?京*”，？是一个字符，*是多个字符，这是查  "x京xxxxxxx"的city

8.“北京 南京”，查找desc中有北京或者有南京的，中间默认是or，queryParser.setDefaultOperator(Operator.AND);可以设置为and,或者 “北京 and 南京”


===================================================

 Term：
  Term直接用一个单词表示，如“hello” ,多个Term用空格分割，如“hello java”,

  

  Field:
  可以添加上域，域和Term字符串用冒号隔开，如title:"The Right Way"，查询多个域用or或者and连接，

  如title:"The Right Way" AND text:go

 

  Term字符串你还可以使用通配符进行模糊匹配，如title: ja*a  title:ja?a title:ja*等等

  你还可以使用~字符开启FuzzyQuery,如title:roam~ or title:roam~0.8
  相似度阀值取值范围是0-1之间，默认值是0.5，

  

  QueryParser语法表达式还支持开启PhraseQuery短语查询，如title:"jakarta apache"~10

  表示查询title域中包含jakarta和apache字符且jakarta在apache前面且jakarta与apache之间间隔距离在10个间距之内(即<=10)。

 

  当然也支持范围查询，title:[java to php],age[18 to 28]

 

  你也可以单独为某个Term设置权重，如title:java^4,默认权重都为1.

  

  Boolean Operators即boolean操作符即or和and,用来链接多个Term的，如果两个Term仅仅用空格隔开，则默认为or链接的，如title:java^5 and content:lucen*

 

  当然还有+ -字符，表示必须符合和必须不符合即排除的意思，如+jakarta lucene,但注意只有一个Term的时候，不能用NOT,比如NOT "jakarta apache"是不合法的。

  而这样就可以，"jakarta apache" -"Apache Lucene"表示必须包含jakarta apache,但不能包含Apache Lucene.

 

  当or and条件很复杂时，需要限制优先级时可以用()小括号对Term条件进行分组，如(jakarta OR apache) AND website

 

  当对某个域的限定值有多个可以用or/and进行链接，也可以用()写在一起，如title:(+return +"pink panther")，当然你也可以用and拆成title:return and title:"pink panther"

 

  Lucene中需要进行转义的特殊字符包括：

  + - && || ! ( ) { } [ ] ^ " ~ * ? : \